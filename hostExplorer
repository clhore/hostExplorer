#!/usr/bin/bash

# Author: clhore

# Colours
declare -r greenColour="\e[0;32m\033[1m"
declare -r endColour="\033[0m\e[0m"
declare -r redColour="\e[0;31m\033[1m"
declare -r blueColour="\e[0;34m\033[1m"
declare -r yellowColour="\e[0;33m\033[1m"
declare -r purpleColour="\e[0;35m\033[1m"
declare -r turquoiseColour="\e[0;36m\033[1m"
declare -r grayColour="\e[0;37m\033[1m"

# Global Variables
declare -r tmpfile="tmp.json"
declare -r host_N=$(jq ".host_N" $tmpfile)-1
declare -r priority_ports=(20 21 22 80 8080)
declare -r dependencies=(python3 python3 jq)


function install_dependencies(){
	#tput civis
	
	echo -e "\t${yellowColour}[*]${endColour}${grayColour} Comprobando programas necesarios...${endColour}"
	sleep 2

		
	for program in "${dependencies[@]}"; do
		echo -ne "\n\t${yellowColour}[*]${endColour}${blueColour} Herramienta${endColour}${purpleColour} $program${endColour}${blueColour}...${endColour}"
		
		test -f /usr/bin/$program
			
		if [ "$(echo $?)" == "0" ]; then
			echo -e " ${greenColour}(V)${endColour}"
		else
			echo -e " ${redColour}(X)${endColour}\n"
			echo -e "\t${yellowColour}[*]${endColour}${grayColour} Instalando herramienta ${endColour}${blueColour}$program${endColour}${yellowColour}...${endColour}"	
			if [ $system == "l" ] || [ $system == "linux" ]; then
				sudo pacman -S $program
			elif [ $system == "u" ] || [ $system == "U" ]; then
				sudo apt install $program
			else 
				echo "error install"
			fi
		fi; sleep 1
	done

}

function check_dependencies(){
	for program in "${dependencies[@]}"; do
                echo -ne "\n\t${yellowColour}[*]${endColour}${blueColour} Herramienta${endColour}${purpleColour} $program${endColour}${blueColour}...${endColour}"

                test -f /usr/bin/$program

                if [ "$(echo $?)" != "0" ]; then	
			install_dependencies
		fi
	done
}


function scanPorts(){
        for (( c=0; c<=$host_N; c++ ))
        do
                ip=$(jq ".host[$c]" $tmpfile)
                #echo "$ip"
                for port in "${priority_ports[@]}"; do
                        timeout 1 bash -c "echo '' > /dev/tcp/$ip/$port" 2>/dev/null && echo -e "\n\t${yellowColour}[${endColour}${turquoiseColour}*${endColour}${yellowColour}]${endColour} ${redColour}Port $port ${endColour}- ${grayColour}Puerto abierto($ip)${endColour}" &
                done
                #sleep 0.4
        done
}


parameter_counter=0
while getopts ":e:s:i:u:r:c:w:d:k:x:a:v:f:h:" arg; do
    case $arg in
	e) explorer_mode=$OPTARG && let parameter_counter+=1;;
	s) system=$OPTARG && let parameter_counter+=1;;
        i) ip_address=$OPTARG && let parameter_counter+=1;;
        u) user_name=$OPTARG && let parameter_counter+=1;;
        r) reset_machineName=$OPTARG && let parameter_counter+=1;;
        c) shoutbox_messages=$OPTARG && let parameter_counter+=1;;
        w) whois_messages=$OPTARG && let parameter_counter+=1;;
        d) install_dependencies=$OPTARG && let parameter_counter+=1;;
        k) machine_to_stop=$OPTARG && let parameter_counter+=1;;
        x) machine_to_extend=$OPTARG && let parameter_counter+=1;;
        a) machine_to_assign=$OPTARG && let parameter_counter+=1;;
        f) send_flag=$OPTARG && let parameter_counter+=1;;
        v) download_vpn=$OPTARG;;
	h) helpPanel;;
    esac
done

if [ "$parameter_counter" != "0" ]; then
	check_dependencies
	clear
	python3 scanRed.py
	sleep 0.4
	scanPorts
else
	echo "error"
fi
